name: release
on:
  workflow_dispatch:
    inputs:
      VERSION:
        description: "version"
        required: true
        type: string

jobs:
  create-draft-release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - name: package
        run: |
          gh release create $VERSION --draft=true --title=$VERSION

  package-msi:
    runs-on: windows-latest
    needs: [ create-draft-release ]
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: package
        run: |
          ./gradlew packageMsi
      - name: publish
        run: |
          $files = Get-ChildItem -File build/compose/binaries/main/msi | where {! $_.PSIsContainer}
          foreach ($file in $files) {
            $name = $file.Name
            gh release upload ${ENV:VERSION} build/compose/binaries/main/msi/$name
          }
  package-deb:
    runs-on: ubuntu-latest
    needs: [ create-draft-release ]
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: package
        run: |
          ./gradlew packageDeb
      - name: publish
        run: |
          files=$(find build/compose/binaries/main/deb/*)
          for file in $files; do
            gh release upload $VERSION $file
          done
  package-dmg:
    runs-on: macos-latest
    needs: [ create-draft-release ]
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: package
        run: |
          ./gradlew packageDmg
      - name: publish
        run: |
          files=$(find build/compose/binaries/main/dmg/*)
          for file in $files; do
            gh release upload $VERSION $file
          done

  release:
    runs-on: ubuntu-latest
    needs: [ package-dmg, package-msi, package-deb ]
    env:
      GH_TOKEN: ${{ github.token }}
      VERSION: ${{ github.event.inputs.VERSION }}
    steps:
      - name: release
        run: |
          gh release update $VERSION --draft=false
