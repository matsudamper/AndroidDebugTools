ext["applyMyDependency"] = (Settings settings) -> {
    settings.pluginManagement {
        repositories {
            google()
            gradlePluginPortal()
            mavenCentral()
        }
    }

    settings.dependencyResolutionManagement {
        repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
        repositories {
            mavenLocal()
            google()
            mavenCentral()
            maven { url = "https://maven.pkg.jetbrains.space/public/p/compose/dev" }
        }
        versionCatalogs {
            create("libs") {
                def kotlinVersion = "1.7.20"
                version("kotlin", kotlinVersion)
                plugin("kotlin.serialization", "org.jetbrains.kotlin.plugin.serialization").version(kotlinVersion)
                plugin("kotlin.multiplatform", "org.jetbrains.kotlin.multiplatform").version(kotlinVersion)
                library("kotlin.gradlePlugin", "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")

                def composeVersion = "1.3.0-rc01"
                plugin("compose", "org.jetbrains.compose").version(composeVersion)

                def detektVersion = "1.22.0"
                library("detekt.gradlePlugin", "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion")
                library("detekt.formatting", "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion")
                library("twitter.compose.rules.detekt", "com.twitter.compose.rules:detekt:0.0.26")

                library("compose.material3.desktop", "org.jetbrains.compose.material3:material3-desktop:1.2.2")

                library("kotlin.coroutine", "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4")
                library("kotlin.serialization.json", "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1")

                library("adam.adam", "com.malinskiy.adam:adam:0.4.8")

                def kotestVersion = "5.5.4"
                library("kotest.runner.junit5", "io.kotest:kotest-runner-junit5:$kotestVersion")
                library("kotest.assertion.core", "io.kotest:kotest-assertions-core:$kotestVersion")
            }
        }
    }
}
